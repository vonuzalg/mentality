<!DOCTYPE html>
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
		<meta name="author" content="admin" />
		<link rel="stylesheet" href="first.css"/>
		<link rel="ahortcut icon" type="image/x-icon" href="favicon.ico" />
		<title>Курсы по программированию</title>
	</head>
	<body>
		<h1>Бэкенд-разработчик</h1>
			<p align="justify" class="text">
				Если фронтенд-разработчик работает с внешней стороной программ, то бэкендер — с тем, что находится «под капотом» — внутренним содержанием системы, серверными технологиями: базой данных, архитектурой и программной логикой.

				Бэкенд-разработчик создаёт функции сайта, через которые пользователь взаимодействует с интерфейсом.
				
				Фронтенд — это форма регистрации и корзина на сайте, а бэкенд — это связка полей формы регистрации с корзиной, база данных и интеграция с платёжным сервисом
				
				Оба этих специалиста действуют в связке — так удаётся достигать лучшего результата.
				
				<p align="justify" class="text"><b>Где нужен.</b> Как и в случае с фронтендом — везде, где есть сайты и приложения.
				
				Другое дело, что бэкендеры бывают разного уровня: в офисе условной соцсети или крупного сайта объявлений ему предстоит работать с высокими нагрузками, микросервисной архитектурой и контейнеризацией в Docker и Kubernetes, использовать и знать системы мониторинга типа Zabbix или Grafana.
				
				А для небольшого интернет-магазина вполне достаточно связки PHP-Ajax-нужная СУБД-немного HTML, иногда и того меньше.

				<p align="justify" class="text"><b>Что важно знать и уметь.</b> Основные инструменты бэкенд-разработчика — серверные языки программирования: PHP, Python, Ruby, Java, Perl, Node JS. Дополнительно к Node JS полезно изучить Express — библиотеку для взаимодействия платформы Node JS с сервером и Mongo DB — базу данных для получения и хранения информации.
				
				А ещё нелишним будет освоить фреймворки Symfony, Codeigniter, Yii, Zend Framework, Kohana и базы данных MySQL/SQLite.
				<p align="justify" class="text">Длительность: <i>12 месяцев по 12 часов в неделю.</i><a href="#">&#8810;Записаться на курс&#8811;</a></p>
			</p>
		<h1>JavaScript-разработчик</h1>
			<p align="justify" class="text">
				Больше всего разработчиков на JavaScript трудится в вебе. Они создают скрипты, которые управляют интерактивными элементами на сайте: формами, слайдерами, всплывающими окнами.

				Помимо веб-сайтов, такие специалисты разрабатывают: браузерные операционные системы; прикладное программное обеспечение; приложения для интернета вещей — SMART-телевизоры, умные часы и др.; макросы для офисных приложений: OpenOffice и др.
				В остальном работа программиста на JavaScript мало отличается от будней других программистов: нужно писать код, тестировать его — не всегда на проектах есть тестировщики, устранять баги, разбираться в чужом коде и оптимизировать его.
				<p align="justify" class="text"><b>Где нужен.</b> JavaScript-разработчиками интересуются, прежде всего, большие продуктовые компании и те, что делают сайты, мобильные и веб-приложения на заказ.

				Заявки бывают и от флагманов отрасли, и от маленьких коллективов, выпускающих всего пару-тройку программных продуктов. Иногда таких специалистов ищут даже стартапы, обещающие хорошие перспективы сотрудникам.

				<p align="justify" class="text"><b>Что важно знать и уметь.</b> Само собой, язык JavaScript — по умолчанию. А всё остальное — из базового набора фронтенд-разработчика: разметку HTML и CSS, систему контроля версий Git, фреймворки react.js, vue.js, angular.js (один из них).
					<p align="justify" class="text">Длительность: <i>18 месяцев по 10 часов в неделю.</i><a href="#">&#8810;Записаться на курс&#8811;</a></p>
			</p>
			<h1>Фронтенд-разработчик</h1>
			<p align="justify" class="text">
				Фронтендер отвечает за внешнюю сторону сайтов и приложений и следит, чтобы они хорошо отображались во всех браузерах и на всех устройствах. Пользовательские интерфейсы — это его зона ответственности. Программист и верстальщик в одном флаконе, который делает сервисы максимально красивыми, удобными и современными.
				Главная задача такого специалиста — верстать: расставить HTML-разметку и привязать к ней CSS-стили. А ещё добавить интерактивности: переходы, анимацию, выпадающие меню или выезжающие окна.	
				Когда продукт готов, он проверяет, всё ли нормально функционирует и отлавливает баги. А если что-то не в порядке с макетом, то может проявить себя в и качестве дизайнера: что-то дорисовать, отредактировать картинку в фотошопе и перенести её в код или изменить шрифт.</p>
			<p align="justify" class="text"><b>Где нужен.</b> Везде, где сайт — важная коммерческая составляющая: они нужны интернет-магазинам и ритейлерам, блогам и СМИ, сотовым операторам и банкам, рекламным агентствам и развлекательным сервисам.
				Часто фронтендеры требуются разработчикам приложений для бизнеса: системам управления проектами, корпоративным порталам или CRM.</p>
			<p align="justify" class="text"><b>Что важно знать и уметь.</b> Фронтендер должен знать HTML, CSS, библиотеки и фреймворки JavaScript, уметь пользоваться CVS, Git, GitHub, таскраннерами, технологиями юнит-тестирования, не бояться препроцессоров и сборщиков LESS, SASS, GRUNT и GULP.
				<p align="justify" class="text">Длительность: <i>12 месяцев по 10 часов в неделю.</i><a href="#">&#8810;Записаться на курс&#8811;</a></p>
			</p>
		<h1>Разработчик игр	</h1>
			<p align="justify" class="text">
				Если вы обожаете играть и мечтаете создать собственный Counter Strike или Last of us, эта профессия для вас! Гейм-девелоперы работают с движками и создают с их помощью новые шутеры, квесты, аркады и головоломки.

				Разработчики игр:
				
				настраивают визуальная составляющую: текстуры, материалы, освещение;
				программируют уровни;
				интегрируют персонажей в игру и настраивают их взаимодействие;
				внедряют анимацию, модели и эффекты;
				разрабатывают игровые механики: то, как игра должна функционировать, что в ней должно происходить и как;
				внедряют сторонние плагины и SDK — системы аналитики и рекламы;
				оптимизируют код, чтобы программы работали быстрее и требовали меньше ресурсов;
				создают дополнительные приложения.
				<p align="justify" class="text"><b>Где нужен.</b> Логично — в компаниях, которые делают игры. Nintendo, Blizzard и Ubisoft ждут вас! А ещё такие специалисты могут быть интересны независимым инди-проектам. И, конечно, разработчикам игр для мобильных устройств.

				<p align="justify" class="text"><b>Что важно знать и уметь.</b> Прежде всего, разработчик игр должен знать игровой движок. Unity и Unreal Engine — самые популярные.

				Ещё нужно:

				Знать языки программирования. В случае с Unity — это C#. Именно на нём написан движок. Также не помешают Python, Java и C++.
				Освоить пакет Blender, который незаменим для 3D-моделирования, визуализации и создания трёхмерной графики.
				Понимать физику процессов — какие силы влияют на поведение персонажей и их движения.
				Ориентироваться в игровых жанрах и знать их особенности.
				Знать, что такое ООП (объектно-ориентированное программирование).
				Уметь пользоваться Git.
				<p align="justify" class="text">Длительность: <i>12 месяцев по 12 часов в неделю.</i><a href="#">&#8810;Записаться на курс&#8811;</a></p>
			</p>
		<h1>1С-разработчик</h1>
			<p align="justify" class="text">
				«1С:Предприятие» — это пакет программ от компании 1С, которые помогают автоматизировать бухгалтерский, кадровый и управленческий учёт на предприятиях: начислять зарплату, контролировать расходы, подготавливать отчётность.

				1С-разработчик внедряет 1С, адаптирует софт под потребности клиента и следит, чтобы он стабильно функционировал и выполнял всё, что требуется.
				
				Если кратко, то 1С-разработчик:
				
				Внедряет и настраивает типовые конфигурации 1С.
				Дорабатывает функционал под бизнес-процессы.
				Обеспечивает защиту данных и борется с вредоносным ПО.
				Создаёт дополнительные модули, отчёты, формы.
				Следит за обновлениями и устраняет ошибки после установки.
				Поддерживает базы данных компании и серверы, на которых работают программы.
				Делает бэкапы и настраивает параметры восстановления системы в случае сбоев.
				<p align="justify" class="text"><b>Где нужен.</b> Везде, где есть 1С — от ИП и мелких магазинов до крупных сетей и логистических центров, холдингов, банков и заводов. Это примерно 90% российского бизнеса.

				<p align="justify" class="text"><b>Что важно знать и уметь.</b> Специалист 1С работает на стыке программирования, системного администрирования и бухгалтерии. То есть не только разбирается в продуктах 1С и может написать читаемый код, но и обладает определёнными знаниями и умениями в области финансов и в состоянии без посторонней помощи решать типовые бухгалтерские задачи. Так, чтобы автоматизировать выплаты зарплат, надо знать, как вообще это происходит, что такое МРОТ и какие бывают надбавки и премии.
				<p align="justify" class="text">Длительность: <i>10 месяцев по 10 часов в неделю.</i><a href="#">&#8810;Записаться на курс&#8811;</a></p>
			</p>
		<h1>DevOps-инженер</h1>
			<p align="justify" class="text">
				DevOps-инженер отвечает за «сборку» проекта. Это связующее звено между разработчиками и системными администраторами. Он синхронизирует и автоматизирует все этапы работы над продуктом: от написания кода до тестирования и финального релиза.

				Кроме того, на плечи DevOps-инженера ложится мониторинг готового ПО и его последующая поддержка. Он совмещает сразу несколько профессий: системного администратора, разработчика, тестировщика и менеджера. Считается, что девопс — это роль для опытного сисадмина.
				
				<p align="justify" class="text"><b>Где нужен.</b> В компаниях, которые разрабатывают приложения и управляют серверами. Девопсов любят IT-гиганты вроде Amazon.
				
					<p align="justify" class="text"><b>Что важно знать и уметь.</b> Девопс умеет настраивать железо и адаптировать под него код и работать с инструментами автоматизации, тестирования и оптимизации. Обладает опытом администрирования ОС Windows и Linux. Может написать скрипты и код, подкован в сетевых технологиях.
				<p align="justify" class="text1">Длительность: <i>18 месяцев по 10 часов в неделю.</i><a href="#">&#8810;Записаться на курс&#8811;</a></p>
			</p>
			<footer>
				<div>
					<div class="block">
						<div class="logo">
							<h3 class="">Mentality</h3>
							<h3>Сеть онлайн-школ</h3>
						</div>
						<div class="search">
							<input type="text" placeholder="Поиск по сайту">
						</div>
					</div>
				<hr>
					<div>
						<h4><u>MN</u><i>lity</i></h4>
					</div>
					<div>
						<h5>ПОЛИТИКА ОБРАБОТКИ ПЕРСОНАЛЬНЫХ ДАННЫХ</h5>
						<div>
							<p align="justify" class="pd">
								1.1. Политика Частного образовательного учреждения дополнительного 
								профессионального образования «Образовательные технологии «ЧОУ ДПО 
								(Коробка навыков)» (далее – ЧОУ ДПО) в отношении обработки персональных 
								данных (далее – Политика) разработана в соответствии с Федеральным законом 
								№152-ФЗ «О персональных данных» от 27.07.2006 г. и иными актами РФ.
								1.2. Настоящая Политика определяет порядок обработки персональных 
								данных пользователей сайта, условия и принципы обработки персональных данных, права Пользователей 
								и обязанности ЧОУ ДПО, сведения о реализуемых мерах по защите 
								обрабатываемых персональных данных.
								1.3. Настоящая Политика действует в отношении всех персональных данных, 
								которые ЧОУ ДПО получает от пользователей Сайтов (далее – Пользователи, 
								Пользователь).
								1.4. В случае несогласия с условиями Политики Пользователь должен 
								немедленно прекратить любое использование Сайтов.
								2. Термины и определения
								2.1. В Политике используются следующие термины:
								Сайт - интернет-сайт;
								Сайт Платформы - интернет-сайт;
								Сайты - Сайт и Сайт Платформы;
								Персональные данные (далее - ПДн) - любая информация, относящаяся 
								прямо или косвенно к определенному или определяемому физическому лицу ;
								Обезличивание ПДн - действия, в результате которых невозможно 
								определить без использования дополнительной информации принадлежность ПДн 
								конкретному субъекту ПДн;
								Обработка ПДн - любое действие (операция) или совокупность действий 
								(операций), совершаемых с использованием средств автоматизации или без 
								использования таких средств с персональными данными, включая сбор, запись, 
								систематизацию, накопление, хранение, уточнение (обновление, изменение), 
								извлечение, использование, передачу (распространение, предоставление, доступ), 
								обезличивание, блокирование, удаление, уничтожение ПДн; 
								Оператор - Частное образовательное учреждение дополнительного 
								профессионального образования «Образовательные технологии «Коробка 
								навыков» («ЧОУ ДПО»). ЧОУ ДПО самостоятельно организует и осуществляет 
								обработку ПДн, а также определяет цели обработки ПДн, состав ПДн, подлежащих 
								обработке, действия (операции), совершаемые с ПДн;
								Личный кабинет - совокупность защищенных страниц Сайта Платформы, 
								созданных в результате регистрации Пользователя и доступных при вводе его 
								аутентификационных данных (адреса электронной почты и пароля) в 
								предусмотренные для этого поля на Сайте Платформы;
								Предоставление ПДн - действия, направленные на раскрытие ПДн 
								определенному лицу или определенному кругу лиц;
								Распространение ПДн - действия, направленные на раскрытие ПДн 
								неопределенному кругу лиц или на ознакомление с персональными 
								данными неограниченного круга лиц, в том числе обнародование ПДн в средствах 
								массовой информации, размещение в информационно–телекоммуникационных 
								сетях или предоставление доступа к персональным данным каким–либо иным 
								способом.
							</p>
							<p align="right" class="pd">©2023 Mentality</p>
						</div>
			</footer>
		</body>
</html>